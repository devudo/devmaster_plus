<?php

/**
 * @file devshop_projects.module
 * a module in the DevShop module group which enables the user to create 
 * proects and group sites/platforms into project groups.
 */

/**
 * Implementation of hook_perm()
 */
function devshop_testing_perm() {
  return array(
    'create devshop-test task',
  );
}

/**
 * Implements hook_form_alter().
 */
function devshop_testing_form_alter(&$form, &$form_state, $form_id) {

  if ($form_id == 'project_node_form') {
    $form['tests_to_run'] = array(
      '#type' => 'textarea',
      '#title' => t('Tests To Run'),
      '#default_value' => $form['#node']->tests_to_run,
      '#rows' => 6,
      '#description' => t('Enter the names of the simpletests to trigger when "Run Tests" task is started, one per line.  See the !link for examples.', array('!link' => l(t('Drupal API'), 'http://api.drupal.org/api/drupal/modules%21simpletest%21drupal_web_test_case.php/class/DrupalWebTestCase/7'))),
      '#weight' => 20,
    );
  }
}

/**
 * Implements hook_nodeapi()
 */
function devshop_testing_nodeapi(&$node, $op, $a3 = null) {

  if ($node->type != 'project' || $a3 != null) {
    return;
  }

  switch ($op) {
  case 'load':
    $data = db_fetch_array(db_query("SELECT tests_to_run " .
				     "FROM {hosting_devshop_project_testing} ".
				     "WHERE project_nid = %d", $node->nid));
    return $data;

  case 'view':

    break;


  case 'insert':
  case 'update':
    db_query("DELETE FROM {hosting_devshop_project_testing} " .
	     "WHERE project_nid = %d", $node->nid);

    db_query("INSERT INTO {hosting_devshop_project_testing} " .
	     "(project_nid, tests_to_run) " .
	     "VALUES(%d, '%s')", $node->nid, $node->tests_to_run);
    break;

  case 'delete':
    db_query("DELETE FROM {hosting_devshop_project_testing} " .
	     "WHERE project_nid = %d", $node->nid);
    break;

  default:
    break;
  }

}

/**
 * Implementation of hook_hosting_tasks()
 *
 */
function devshop_testing_hosting_tasks() {
  $tasks = array();

  $tasks['project']['devshop-test'] = array(
    'title' => t('Run Tests'),
    'description' => t('Run a group of SimpleTests.'),
    'dialog' => TRUE,
    'task_permitted' => TRUE,
    'access callback' => 'devshop_hosting_task_menu_access',
  );

  return $tasks;
}

/**
 * Implementation of hook_hosting_task_TASK_TYPE_form().
 */
function hosting_task_devshop_test_form($node) {

  $tests = $node->tests_to_run;
  
  $form = array();
  devshop_projects_tasks_add_environment_to_form($form, $node, t('Choose the environment to run tests on.'), 'environment', 'Environment', 'radios');

  $example_site = key($form['environment']['#options']) . "." . $node->base_url;
  $form['tests_to_run'] = array(
    '#type' => 'textarea',
    '#title' => t('Tests To Run'),
    '#default_value' => $tests,
    '#rows' => 6,
    '#description' => t('Enter the names of the simpletests to run, one per line.  See the !link for examples, or call <strong><code>drush @@site test-run</code></strong> for a list of available tests.', array('!link' => l(t('Drupal API'), 'http://api.drupal.org/api/drupal/modules%21simpletest%21drupal_web_test_case.php/class/hierarchy/DrupalWebTestCase/7'), '@site' => $example_site)),
  );

  return $form;
}

/**
 * Implementation of hook_hosting_task_TASK_TYPE_form_validate().
 *
 */
function hosting_task_devshop_test_form_validate($form, &$form_state) {

  $tests = $form_state['values']['parameters']['tests_to_run'];
  $t = trim(str_replace("\n", "", $tests));

  if (empty($tests) || empty($t) || $tests == "" || $t == ""){
    form_set_error('tests_to_run', t('You must include at least one test.'));
  }


}

